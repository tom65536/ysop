[build-system]
requires = [
  "hatchling",
  "hatch-vcs",
  "hatch-docstring-description",
  "hatch-fancy-pypi-readme"
]
build-backend = "hatchling.build"

[project]
name = "ysop"
dynamic = ["version", "description", "readme"]
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "tom65536", email = "peregrinus@planet.ms" },
]
classifiers = [
  "Framework :: IPython",
  "License :: OSI Approved :: BSD License",
  "Topic :: System :: Shells",
  "Development Status :: 1 - Planning",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies=[
  "metakernel"
]

[project.urls]
Documentation = "https://github.com/tom65536/ysop#README.md"
Issues = "https://github.com/tom65536/ysop/issues"
Source = "https://github.com/tom65536/ysop"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/ysop/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]



[tool.hatch.env]
requires = ["hatch-pip-compile"]


[tool.hatch.envs.default]
type = "pip-compile"
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ysop tests}"


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"


[tool.coverage.run]
source_pkgs = ["ysop", "tests"]
branch = true
parallel = true
omit = [
  "src/ysop/__about__.py",
]

[tool.coverage.paths]
_ = ["src/_", "*/-/src/_"]
tests = ["tests", "*/-/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
